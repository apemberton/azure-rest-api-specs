{
  "swagger": "2.0",
  "info": {
    "title": "Spell Check API",
    "description": "The Spell Check API - V7 lets you check a text string for spelling and grammar errors.",
    "version": "1.0"
  },
  "parameters": {
    "x-bingapis-sdk": {
      "name": "X-BingApis-SDK",
      "description": "Activate swagger compliance",
      "x-ms-parameter-location": "method",
      "required": true,
      "type": "string",
      "in": "header",
      "x-ms-enum": {
        "name": "XBingApisSDK",
        "modelAsString": true
      },
      "enum": [
        "true"
      ]
    }
  },
  "host": "api.cognitive.microsoft.com",
  "schemes": [
    "https"
  ],
  "basePath": "/bing/v7.0",
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "apiKeyHeader": {
      "name": "Ocp-Apim-Subscription-Key",
      "type": "apiKey",
      "in": "header"
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    }
  ],
  "paths": {
  },
  "definitions": {
    "SpellCheck": {
      "allOf": [
        {
          "$ref": "#/definitions/Answer"
        }
      ],
      "type": "object",
      "required": [
        "flaggedTokens"
      ],
      "properties": {
        "flaggedTokens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpellingFlaggedToken"
          }
        }
      }
    },
    "Answer": {
      "allOf": [
        {
          "$ref": "#/definitions/Response"
        }
      ],
      "type": "object",
      "properties": {}
    },
    "SpellingFlaggedToken": {
      "x-ms-discriminator-value": "Spelling/FlaggedToken",
      "type": "object",
      "required": [
        "offset",
        "token",
        "type"
      ],
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "token": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "UnknownToken",
          "enum": [
            "UnknownToken",
            "RepeatedToken"
          ],
          "x-ms-enum": {
            "name": "ErrorType",
            "modelAsString": true
          }
        },
        "suggestions": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpellingTokenSuggestion"
          }
        },
        "pingUrlSuffix": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "Response": {
      "description": "Defines a response. All schemas that could be returned at the root of a response should inherit from this",
      "allOf": [
        {
          "$ref": "#/definitions/Identifiable"
        }
      ],
      "type": "object",
      "properties": {}
    },
    "SpellingTokenSuggestion": {
      "x-ms-discriminator-value": "Spelling/TokenSuggestion",
      "type": "object",
      "required": [
        "suggestion"
      ],
      "properties": {
        "suggestion": {
          "type": "string"
        },
        "score": {
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "pingUrlSuffix": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "Identifiable": {
      "description": "Defines the identity of a resource.",
      "allOf": [
        {
          "$ref": "#/definitions/ResponseBase"
        }
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "A String identifier.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "description": "The top-level response that represents a failed request.",
      "allOf": [
        {
          "$ref": "#/definitions/Response"
        }
      ],
      "type": "object",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "description": "A list of errors that describe the reasons why the request failed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "ResponseBase": {
      "discriminator": "_type",
      "type": "object",
      "required": [
        "_type"
      ],
      "properties": {
        "_type": {
          "type": "string"
        }
      }
    },
    "Error": {
      "description": "Defines the error that occurred.",
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "The error code that identifies the category of error.",
          "type": "string",
          "default": "None",
          "enum": [
            "None",
            "ServerError",
            "InvalidRequest",
            "RateLimitExceeded",
            "InvalidAuthorization",
            "InsufficientAuthorization"
          ],
          "x-ms-enum": {
            "name": "ErrorCode",
            "modelAsString": true
          }
        },
        "subCode": {
          "description": "The error code that further helps to identify the error.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "UnexpectedError",
            "ResourceError",
            "NotImplemented",
            "ParameterMissing",
            "ParameterInvalidValue",
            "HttpNotAllowed",
            "Blocked",
            "AuthorizationMissing",
            "AuthorizationRedundancy",
            "AuthorizationDisabled",
            "AuthorizationExpired"
          ],
          "x-ms-enum": {
            "name": "ErrorSubCode",
            "modelAsString": true
          }
        },
        "message": {
          "description": "A description of the error.",
          "type": "string"
        },
        "moreDetails": {
          "description": "A description that provides additional information about the error.",
          "readOnly": true,
          "type": "string"
        },
        "parameter": {
          "description": "The parameter in the request that caused the error.",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "The parameter's value in the request that was not valid.",
          "readOnly": true,
          "type": "string"
        }
      }
    }
  }
}